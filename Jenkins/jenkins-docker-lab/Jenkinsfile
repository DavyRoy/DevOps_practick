pipeline {
    agent {
        docker {
            image 'docker:24.0.7' // –Ø–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞–±–∏–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é
            args '-v /var/run/docker.sock:/var/run/docker.sock'
        }
    }

    environment {
        DOCKER_CLI_EXPERIMENTAL = 'enabled'
    }

    stages {
        stage('Build Docker Image') {
            steps {
                echo "üõ† –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞ myapp:latest"
                sh 'docker build -t myapp:latest .'
            }
        }

        stage('Run Tests') {
            steps {
                echo "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞"
                // —É–±–µ–¥–∏—Å—å, —á—Ç–æ –≤ Dockerfile –µ—Å—Ç—å RUN chmod +x ./run-tests.sh
                sh 'docker run --rm myapp:latest ./run-tests.sh'
            }
        }

        stage('Deploy') {
            steps {
                echo "üöÄ –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –≤ —Ñ–æ–Ω–µ"
                sh 'docker run -d -p 8080:80 --name myapp_container myapp:latest'
            }
        }
    }

    post {
        always {
            echo "üßπ –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
            // –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –∫–æ–Ω—Ñ–ª–∏–∫—Ç –ø–æ—Ä—Ç–æ–≤ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—Ö
            sh '''
              docker ps -a --filter "name=myapp_container" --format "{{.ID}}" | xargs -r docker rm -f
            '''
        }
    }
}
